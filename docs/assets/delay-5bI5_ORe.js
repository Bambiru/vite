function u(e,t=document){if(typeof e!="string")throw new Error("getNode 함수의 인수는 문자 타입 이어야 합니다.");return t.nodeType!==document.DOCUMENT_NODE&&(t=document.querySelector(t)),t.querySelector(e)}function a(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}const m=e=>a(e)==="object",g=e=>a(e)==="number",n={method:"GET",body:null,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}},r=async e=>{const{url:t,...o}={...n,...e,headers:{...n.headers,...e.headers}},s=await fetch(t,o);return s.ok&&(s.data=await s.json()),s};r.get=(e,t)=>r({url:e,...t});r.post=(e,t,o)=>r({method:"POST",url:e,body:JSON.stringify(t),...o});r.delete=(e,t)=>r({method:"DELETE",url:e,...t});r.put=(e,t,o)=>r({method:"PUT",url:e,body:JSON.stringify(t),...o});u(".first");u(".second");const i={shouldReject:!1,timeout:1e3,data:"아싸 성공!",errorMessage:"알 수 없는 오류가 발생했습니다."};function y(e){let t={...i};g(e)&&(t.timeout=e),m(e)&&(t={...i,...e});let{timeout:o,shouldReject:s,errorMessage:c,data:d}=t;return new Promise((l,f)=>{setTimeout(()=>{s?f({message:c}):l(d)},o)})}y(1e3);export{u as g,r as t};
